import java.util.*;

/*
 * Cracking the Coding Interview - 6th Edition
 * 
 * Chapter 1 
 * 
 * Arrays and Strings 
 * 
 */

public class ArraysAndStrings {
	
	public static void main(String[] args) {
		// Problem 1.1
			String input = "Andrew";
				isUnique(input);
		// Problem 1.2
			String str1 = "foo";
			String str2 = "bar";
				checkPermutation(str1, str2);
	}
	
	
    /* Problem 1.1 - Is Unique
	 * Implement an Algorithm to determine if a string has all unique characters.
	 * What if you cannot use additional data structures?
	 */
	
	public static boolean isUnique(String str) {
		if (str.length() > 128) return false; // Assuming Character Set is ASCII
		
		for (int i = 0; i < str.length(); i++) {
			for (int j = i+1; j < str.length(); j++) {
				if (str.charAt(i) == str.charAt(j)) {
					System.out.println("The string " + str + " is not unique.");
					return false;
				}
			}
		}
		System.out.println("The string " + str + "\n" + "is unique.");
		return true;
	}
	
	/* Problem 1.2 - Check Permutation
	 * Given two Strings, write a method to decide if one is a permutation of the other
	 */
	
	public static boolean checkPermutation(String str1, String str2) {
		// Converting both strings to char arrays
		char[] arr1 = str1.toCharArray();
		char[] arr2 = str2.toCharArray();
		Arrays.sort(arr1);
		Arrays.sort(arr2);
		String sorted_str1 = String.valueOf(arr1);
		String sorted_str2 = String.valueOf(arr2);
		
		if (sorted_str1 == sorted_str2) {
			System.out.println("String " + str1 + " is a permutation of " + str2 + ".");
			return true;
		}
		
		return false;
	}	
}


